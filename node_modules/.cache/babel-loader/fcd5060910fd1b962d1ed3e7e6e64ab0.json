{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aravind/Documents/projects/Local-Video-Party-Client/client/src/components/Login.jsx\";\nimport React from 'react';\nimport { navigate } from '@reach/router';\nimport { serverSocket } from './helper/connection';\nimport style from './Login.module.css';\nimport { AvatarArr } from './Avatar.js';\nimport BackIcon from '../images/BackIcon.png'; // import {createPeerConnection,sendOffer,sendAnswer,handleSignalingData} from './webrtcfile.js'\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickLogin = async event => {\n      event.preventDefault(); // TODO: Add regex to check username is valid\n\n      if (this.state.username !== '') {\n        // createPeerConnection()  \n        var {\n          avatar\n        } = this.state;\n        var avatarName = Object.keys(avatar);\n        var avatarRandom = avatarName[Math.floor(Math.random() * avatarName.length)];\n        this.setState({\n          setAvatarName: avatarRandom\n        });\n\n        if (this.state.userType === 'creator') {\n          // var receiveOffer = await sendOffer()\n          serverSocket.emit('create-room', {\n            username: this.state.username,\n            avatarname: avatarRandom\n          });\n          this.handleCreateRoom();\n        } else if (this.state.userType === 'joinee') {\n          // var sendJoineeAnswer = await sendAnswer()\n          // console.log(\"send answer\",sendJoineeAnswer)\n          serverSocket.emit('join-room', {\n            username: this.state.username,\n            roomID: this.state.roomID,\n            avatarname: avatarRandom\n          });\n          this.handleJoinRoom();\n        }\n      } else {\n        this.setState({\n          usernameError: \"Please provide username\"\n        });\n      }\n    };\n\n    this.handleCreateRoom = () => {\n      serverSocket.on('room-created', data => {\n        sessionStorage.setItem('username', this.state.username);\n        sessionStorage.setItem('room-id', data['room-id']);\n        sessionStorage.setItem('room-details', JSON.stringify(data['room-details']));\n        sessionStorage.setItem('avatarName', this.state.setAvatarName);\n        console.log(data); //write peerconnection\n\n        navigate('/lobby');\n      });\n    };\n\n    this.handleJoinRoom = () => {\n      serverSocket.on('room-joined', data => {\n        sessionStorage.setItem('username', this.state.username);\n        sessionStorage.setItem('room-id', this.state.roomID);\n        sessionStorage.setItem('room-details', JSON.stringify(data['room-details']));\n        sessionStorage.setItem('avatarName', this.state.setAvatarName); //write peerconnection\n\n        console.log(data);\n        navigate('/lobby');\n      });\n    };\n\n    this.handleUsernameChange = event => {\n      event.preventDefault();\n      this.setState({\n        username: event.target.value.trim()\n      });\n    };\n\n    this.handleRoomIDChange = event => {\n      event.preventDefault();\n      this.setState({\n        roomID: event.target.value.trim()\n      });\n    };\n\n    this.state = {\n      userType: '',\n      username: '',\n      roomID: '',\n      usernameError: '',\n      avatar: AvatarArr,\n      setAvatarName: null\n    }; // sessionStorage.removeItem('room-details')\n    // sessionStorage.removeItem('room-id')\n    // sessionStorage.removeItem('username')\n  }\n\n  componentDidMount() {\n    // check if user-type is set or not\n    if (sessionStorage.getItem('user-type') === 'creator' || sessionStorage.getItem('user-type') === 'joinee') {\n      this.setState({\n        userType: sessionStorage.getItem('user-type')\n      });\n    } else {\n      sessionStorage.clear();\n      localStorage.clear();\n      navigate('/');\n    }\n  }\n\n  render() {\n    const {\n      usernameError\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: style.backBtn,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.btnDiv,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: style.btnImg,\n            src: BackIcon,\n            alt: \"backIcon\",\n            onClick: this.navigateBack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: style.btnText,\n            children: \" Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: style.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.unameDiv,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: style.username,\n              htmlFor: \"username\",\n              children: \" Enter Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.unameInput,\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              maxLength: \"20\",\n              onChange: this.handleUsernameChange,\n              placeholder: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), this.state.userType === 'joinee' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.roomIdDiv,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: style.roomId,\n              htmlFor: \"roomID\",\n              children: \"Room ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: style.roomIdInput,\n              type: \"text\",\n              id: \"roomID\",\n              name: \"roomID\",\n              minLength: \"6\",\n              maxLength: \"6\",\n              onChange: this.handleRoomIDChange,\n              placeholder: \"roomId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"h6\", {\n            style: {\n              color: 'red',\n              fontSize: '16px',\n              margin: '5px 0px 12px'\n            },\n            children: usernameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: style.joinBtn,\n            onClick: this.onClickLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/aravind/Documents/projects/Local-Video-Party-Client/client/src/components/Login.jsx"],"names":["React","navigate","serverSocket","style","AvatarArr","BackIcon","Login","Component","constructor","props","onClickLogin","event","preventDefault","state","username","avatar","avatarName","Object","keys","avatarRandom","Math","floor","random","length","setState","setAvatarName","userType","emit","avatarname","handleCreateRoom","roomID","handleJoinRoom","usernameError","on","data","sessionStorage","setItem","JSON","stringify","console","log","handleUsernameChange","target","value","trim","handleRoomIDChange","componentDidMount","getItem","clear","localStorage","render","backBtn","btnDiv","btnImg","navigateBack","btnText","form","unameDiv","unameInput","roomIdDiv","roomId","roomIdInput","color","fontSize","margin","joinBtn"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {navigate} from '@reach/router'\nimport {serverSocket} from './helper/connection'\nimport style from './Login.module.css'\nimport {AvatarArr} from './Avatar.js'\nimport BackIcon from '../images/BackIcon.png'\n// import {createPeerConnection,sendOffer,sendAnswer,handleSignalingData} from './webrtcfile.js'\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            userType: '',\n            username: '',\n            roomID: '',\n            usernameError: '',\n            avatar:AvatarArr,\n            setAvatarName:null\n        }\n        // sessionStorage.removeItem('room-details')\n        // sessionStorage.removeItem('room-id')\n        // sessionStorage.removeItem('username')\n    }\n\n    componentDidMount(){\n\n        // check if user-type is set or not\n        if (sessionStorage.getItem('user-type') === 'creator' || sessionStorage.getItem('user-type') === 'joinee' ){\n            this.setState({userType: sessionStorage.getItem('user-type')})\n        }\n        else{\n            sessionStorage.clear()\n            localStorage.clear()\n            navigate('/')\n        }\n    }\n\n\n   \n    onClickLogin = async (event) =>{\n        event.preventDefault()\n\n        // TODO: Add regex to check username is valid\n        if (this.state.username !== '') {    \n            // createPeerConnection()  \n            var {avatar} = this.state\n            var avatarName = Object.keys(avatar)\n            var avatarRandom = avatarName[Math.floor(Math.random()*avatarName.length)]\n            this.setState({\n                setAvatarName:avatarRandom\n            })\n            if(this.state.userType === 'creator'){ \n                // var receiveOffer = await sendOffer()\n                        \n                serverSocket.emit('create-room', {username:this.state.username,avatarname:avatarRandom});          \n                this.handleCreateRoom()\n            }\n            else if(this.state.userType === 'joinee'){\n                // var sendJoineeAnswer = await sendAnswer()\n                // console.log(\"send answer\",sendJoineeAnswer)\n                serverSocket.emit('join-room', {username:this.state.username, roomID:this.state.roomID,avatarname:avatarRandom});\n                this.handleJoinRoom()\n            }\n        }\n        else {\n            this.setState({usernameError: \"Please provide username\"})\n        }\n    }\n\n    handleCreateRoom = () => {\n        serverSocket.on('room-created',(data)=>{\n\n            sessionStorage.setItem('username', this.state.username)\n            sessionStorage.setItem('room-id', data['room-id'])\n            sessionStorage.setItem('room-details', JSON.stringify(data['room-details']))\n            sessionStorage.setItem('avatarName',this.state.setAvatarName)\n            console.log(data)\n            //write peerconnection\n           \n            navigate('/lobby')    \n        })\n    }\n\n    handleJoinRoom = () => {\n        serverSocket.on('room-joined',(data)=>{\n            sessionStorage.setItem('username', this.state.username)\n            sessionStorage.setItem('room-id', this.state.roomID)\n            sessionStorage.setItem('room-details', JSON.stringify(data['room-details']))\n            sessionStorage.setItem('avatarName',this.state.setAvatarName)\n            //write peerconnection\n            console.log(data)\n\n            navigate('/lobby')    \n        })\n    }\n\n    handleUsernameChange = (event) => {\n        event.preventDefault()\n        this.setState({\n            username: event.target.value.trim()\n        })\n    }\n\n    handleRoomIDChange = (event) => {\n        event.preventDefault()\n        this.setState({\n            roomID: event.target.value.trim()\n        })\n    }\n\n    render() {\n        const { usernameError } = this.state\n\n        return (\n            <div>  \n                 <button className={style.backBtn}>\n                     <div className={style.btnDiv}>\n                     <img className={style.btnImg}src={BackIcon} alt=\"backIcon\" onClick={this.navigateBack}/>\n                     <p className={style.btnText}> Back</p>\n                     </div>\n                    \n                   \n                </button>      \n                <div>\n                \n                <form className={style.form}>\n                    <div className={style.unameDiv}> \n                        <label className={style.username} htmlFor='username'> Enter Username</label>\n                        <input className={style.unameInput}type=\"text\" id='username' name='username' maxLength='20' onChange={this.handleUsernameChange} placeholder=\"username\"></input>\n                    </div>    \n                    {this.state.userType === 'joinee' ? (\n                        <div className={style.roomIdDiv}>\n                            <label className={style.roomId} htmlFor='roomID'>Room ID</label> \n                            <input className={style.roomIdInput}type='text' id='roomID' name='roomID' minLength='6' maxLength='6' onChange={this.handleRoomIDChange} placeholder=\"roomId\"></input>\n                        </div>\n                    ) : null\n                    }\n                     <h6 style={{ color: 'red', fontSize: '16px', margin: '5px 0px 12px' }}>{usernameError}</h6>\n                    <button className={style.joinBtn} onClick={this.onClickLogin}>Login</button>\n                </form>\n               \n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}