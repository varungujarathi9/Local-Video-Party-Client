{"ast":null,"code":"import { serverSocket } from './helper/connection';\nimport Peer from \"simple-peer\";\nconst TURN_SERVER_URL = '35.223.15.12:3479';\nconst TURN_SERVER_USERNAME = 'videoparty';\nconst TURN_SERVER_CREDENTIAL = 'videoparty100';\nconst PC_CONFIG = {\n  iceServers: [{\n    urls: 'turn:' + TURN_SERVER_URL + '?transport=tcp',\n    username: TURN_SERVER_USERNAME,\n    credential: TURN_SERVER_CREDENTIAL\n  }, {\n    urls: 'stun:' + TURN_SERVER_URL,\n    username: TURN_SERVER_USERNAME,\n    credential: TURN_SERVER_CREDENTIAL\n  }]\n};\nvar creatorPC;\nvar joineePC;\nvar stream;\nvar videoPlayer;\n\nfunction startPlaying() {\n  videoPlayer = document.querySelector('video');\n\n  if (videoPlayer === null || videoPlayer === undefined) {\n    console.error(\"videoPlayer not set: \", videoPlayer);\n  } else if (stream === null || stream === undefined) {\n    stream = videoPlayer.captureStream();\n    addMedia();\n  } // navigator.mediaDevices.getUserMedia({\n  //     video: true,\n  //     audio: true\n  //   }).then(addMedia).catch(() => {})\n\n}\n\nfunction addMedia() {\n  let vidtracks = stream.getVideoTracks();\n  let audtracks = stream.getAudioTracks();\n  joineePC.addTrack(vidtracks[0], stream);\n  joineePC.addTrack(audtracks[0], stream);\n}\n\nfunction createPeerConnection() {\n  if (sessionStorage.getItem(\"user-type\") === \"joinee\") {\n    creatorPC = new Peer({\n      config: PC_CONFIG\n    });\n    creatorPC.on('signal', desc => {\n      serverSocket.emit(\"send-offer\", {\n        desc: desc,\n        roomID: sessionStorage.getItem(\"room-id\")\n      });\n    });\n    creatorPC.on('stream', stream => {\n      videoPlayer = document.querySelector('video');\n\n      if ('srcObject' in videoPlayer) {\n        videoPlayer.srcObject = stream;\n      } else {\n        videoPlayer.src = window.URL.createObjectURL(stream); // for older browsers\n      }\n    });\n  } else if (sessionStorage.getItem(\"user-type\") === \"creator\") {\n    joineePC = new Peer({\n      initiator: true,\n      config: PC_CONFIG\n    });\n    joineePC.on('signal', desc => {\n      serverSocket.emit(\"send-offer\", {\n        desc: desc,\n        roomID: sessionStorage.getItem(\"room-id\")\n      });\n    });\n  } else {\n    console.error(\"User type error\");\n  }\n}\n\nserverSocket.on('receive-offer', data => {\n  if (sessionStorage.getItem(\"user-type\") === \"creator\") {\n    if (joineePC === undefined || joineePC === null) {\n      console.error(\"JOINEE UNDEFINED\");\n    } else {\n      joineePC.signal(data['desc']);\n    }\n  } else if (sessionStorage.getItem(\"user-type\") === \"joinee\") {\n    if (creatorPC === undefined || creatorPC === null) {\n      console.error(\"CREATOR UNDEFINED\");\n    } else {\n      creatorPC.signal(data['desc']);\n    }\n  } else {\n    console.error(\"User type error\");\n  }\n});\nexport { createPeerConnection, startPlaying };","map":{"version":3,"sources":["/home/aravind/Documents/projects/Local-Video-Party-Client/client/src/components/SimplePeer.js"],"names":["serverSocket","Peer","TURN_SERVER_URL","TURN_SERVER_USERNAME","TURN_SERVER_CREDENTIAL","PC_CONFIG","iceServers","urls","username","credential","creatorPC","joineePC","stream","videoPlayer","startPlaying","document","querySelector","undefined","console","error","captureStream","addMedia","vidtracks","getVideoTracks","audtracks","getAudioTracks","addTrack","createPeerConnection","sessionStorage","getItem","config","on","desc","emit","roomID","srcObject","src","window","URL","createObjectURL","initiator","data","signal"],"mappings":"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","sourcesContent":["import { serverSocket } from './helper/connection'\nimport Peer from \"simple-peer\";\n\nconst TURN_SERVER_URL = '35.223.15.12:3479';\nconst TURN_SERVER_USERNAME = 'videoparty';\nconst TURN_SERVER_CREDENTIAL = 'videoparty100';\nconst PC_CONFIG = {\n    iceServers: [\n        {\n            urls: 'turn:' + TURN_SERVER_URL + '?transport=tcp',\n            username: TURN_SERVER_USERNAME,\n            credential: TURN_SERVER_CREDENTIAL\n        },\n        {\n            urls: 'stun:' + TURN_SERVER_URL,\n            username: TURN_SERVER_USERNAME,\n            credential: TURN_SERVER_CREDENTIAL\n        }\n    ]\n};\n\nvar creatorPC;\nvar joineePC;\nvar stream;\nvar videoPlayer\n\nfunction startPlaying(){\n    videoPlayer = document.querySelector('video')\n    if(videoPlayer === null || videoPlayer === undefined){\n        console.error(\"videoPlayer not set: \", videoPlayer)\n    }\n    else if(stream === null || stream === undefined){\n        stream = videoPlayer.captureStream()\n        addMedia()\n    }\n\n    // navigator.mediaDevices.getUserMedia({\n    //     video: true,\n    //     audio: true\n    //   }).then(addMedia).catch(() => {})\n    \n}\n\nfunction addMedia () {\n    let vidtracks = stream.getVideoTracks()\n    let audtracks = stream.getAudioTracks()\n    joineePC.addTrack(vidtracks[0], stream)\n    joineePC.addTrack(audtracks[0], stream)\n}\n\nfunction createPeerConnection(){\n    \n    if(sessionStorage.getItem(\"user-type\") === \"joinee\"){\n        creatorPC = new Peer({config:PC_CONFIG})\n        creatorPC.on('signal', desc => {\n            serverSocket.emit(\"send-offer\", {desc:desc, roomID:sessionStorage.getItem(\"room-id\")})\n        })\n        creatorPC.on('stream', stream => {\n            videoPlayer = document.querySelector('video')\n            if ('srcObject' in videoPlayer) {\n                videoPlayer.srcObject = stream\n            } else {\n                videoPlayer.src = window.URL.createObjectURL(stream) // for older browsers\n            }\n        })\n\n    }\n    else if(sessionStorage.getItem(\"user-type\") === \"creator\"){\n\n        joineePC = new Peer({initiator:true, config:PC_CONFIG})\n        joineePC.on('signal', desc => {\n            serverSocket.emit(\"send-offer\", {desc:desc, roomID:sessionStorage.getItem(\"room-id\")})\n        })\n    }\n    else{\n        console.error(\"User type error\")\n    }\n}\n\nserverSocket.on('receive-offer', (data) => {\n    if(sessionStorage.getItem(\"user-type\") === \"creator\"){\n        if(joineePC === undefined || joineePC === null){\n            console.error(\"JOINEE UNDEFINED\")\n        }\n        else{\n            joineePC.signal(data['desc'])\n        }\n    }\n    else if(sessionStorage.getItem(\"user-type\") === \"joinee\"){\n        if(creatorPC === undefined || creatorPC === null){\n            console.error(\"CREATOR UNDEFINED\")\n        }\n        else{\n            creatorPC.signal(data['desc']) \n        } \n    }\n    else{\n        console.error(\"User type error\")\n    }    \n})\n\nexport {createPeerConnection, startPlaying}"]},"metadata":{},"sourceType":"module"}